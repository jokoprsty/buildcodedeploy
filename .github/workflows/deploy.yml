# name : Push kode ke EC2 image
# on:
#   push:
#     branches: main 
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment: AWS_environment
#     steps:
#       - name: checkout repo
#         uses: actions/checkout@v2
#       - name: Create Node Environment  # Sets up Node.js environment.
#         uses: actions/setup-node@v4
#         with: 
#           node-version: 20.x

#       - name: Install Packages and Build Application  # Installs npm packages and builds the Vue.js application.
#         run: |
#           npm ci
#           npm run build

#       - uses: actions/upload-artifact@v4
#         with:
#           name: app-build
#           path: dist
#       - run: ls dist
      
#       - name: Download build artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: app-build
#           path: coba

#     # Deploy to local repo
#       # - name: Deploy
#       #   uses: s0/git-publish-subdir-action@develop
#       #   env:
#       #     REPO: self
#       #     BRANCH: coba
#       #     FOLDER: coba
#       #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

#       - name: "Configure AWS Credentialss" 
#         uses: aws-actions/configure-aws-credentials@v4.0.2
#         with:
#           aws-region: eu-north-1
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#       - name : Create Code Deploy
#         id: deploy
#         uses: webfactory/create-aws-codedeploy-deployment@v0.2.2
#         with:
#               application: latihanCodedeploy
#       - name : Print Commit Message
#         uses: peter-evans/commit-comment@v2
#         with:
#               application: latihanCodedeploy
#               token: ${{ secrets.TOKEN_GITHUB }}
#               body: |
#                     @${{ github.actor }} this was deployed as [${{ steps.deploy.outputs.deploymentId }}](https://console.aws.amazon.com/codesuite/codedeploy/deployments/${{ steps.deploy.outputs.deploymentId }}?region=eu-north-1) to group `${{ steps.deploy.outputs.deploymentGroupName }}`.
            
name: Deploy Spring Boot Hello World APP

on:
  push:
    branches: main

jobs:
  build:    
    environment: AWS_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Create Node Environment  # Sets up Node.js environment.
        uses: actions/setup-node@v4
        with: 
          node-version: 20.x

      - name: Install Packages and Build Application  # Installs npm packages and builds the Vue.js application.
        run: |
          npm ci
          npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: dist
      - run: ls dist
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: coba

      - name: Check Deployment Artifact
        run: |
          if [ ! -f ./app-build.zip ]; then
            echo "Error: Deployment artifact not found."
            exit 1
          fi

      - name: "Configure AWS Credentialss" 
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: eu-north-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Deploy to AWS CodeDeploy
        run: |
          aws s3 cp app-build.zip s3://bucketku12345/api/app-build.zip

          deploymentId=$(aws deploy create-deployment \
              --application-name "latihanCodedeploy" \
              --deployment-group-name "latihanCodedeployGroup" \
              --s3-location bucket="bucketku12345",key=api/app-build.zip,bundleType=zip \
              --file-exists-behavior OVERWRITE

          